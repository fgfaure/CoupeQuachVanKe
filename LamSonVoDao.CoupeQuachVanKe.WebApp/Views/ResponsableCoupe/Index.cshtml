
    <div class="col-sm-2">
        @RenderPage("../Shared/_Menu.cshtml")
    </div>
    <div class ="col-sm-10">
        <h2>Liste des Responsables de Coupe</h2>
        <div id="responsablesCoupe">
        </div>
    </div>

<script>
    $(document).ready(function () {
        var coupes = new kendo.data.DataSource({
            error: function (jqXHR) {
                $("#notification").data('kendoNotification').show({
                    title: "Impossible d'obtenir les coupes."
                }, "error");
            },
            transport: {
                read: {
                    async: true,
                    url: "../QVKApi/GetCoupes",
                    dataType: "json" // "jsonp" is required for cross-domain requests; use "json" for same-domain requests
                },
                parameterMap: function (options, operation) {
                    if (operation !== "read" && options.models) {
                        return { models: kendo.stringify(options.models) };
                    }
                    else {
                        return kendo.stringify(options);
                    }
                }
            },
            schema: {
                parse: function (data) {
                    var temp = [];
                    for (var i = 0; i < data.length; i++) {
                        temp.push({
                            value: data[i].Id,
                            text: data[i].Nom
                        });
                    }
                    return temp;
                },
                model: {
                    id: "Id",
                    fields: {
                        Id: {
                            //this field will not be editable (default value is true)
                            editable: false,
                            // a defaultValue will not be assigned (default value is false)
                            nullable: false
                        },
                        Nom: {
                            //set validation rules
                            type: "string",
                        }
                    }
                }
            }
        });
        coupes.read();

        var resp = new kendo.data.DataSource({
            transport: {
                read: {
                    url: "Get",
                    dataType: "json" // "jsonp" is required for cross-domain requests; use "json" for same-domain requests
                },
                update: {
                    url: "Update",
                    dataType: "json", // "jsonp" is required for cross-domain requests; use "json" for same-domain requests
                    contentType: "application/json",
                    type: "POST",
                    complete: function (jqXHR, textStatus) {
                        console.log(textStatus, "update");
                        $("#notification").data('kendoNotification').show({
                            title: "Mise à jour réussie."
                        }, "success");
                    }
                },
                destroy: {
                    url: "Delete",
                    dataType: "json",
                    contentType: "application/json",
                    type: "POST",
                    complete: function (jqXHR, textStatus) {
                        console.log(textStatus, "update");
                        $("#notification").data('kendoNotification').show({
                            title: "Suppression réussie."
                        }, "success");
                    }
                },
                create: {
                    url: "Create",
                    dataType: "json",
                    contentType: "application/json",
                    type: "POST",
                    complete: function (jqXHR, textStatus) {
                        console.log(textStatus, "update");
                        $("#notification").data('kendoNotification').show({
                            title: "Création réussie."
                        }, "success");
                    }
                },
                parameterMap: function (options, operation) {
                    if (operation !== "read" && options.models) {
                        return { models: kendo.stringify(options.models) };
                    }
                    else {
                        return kendo.stringify(options);
                    }
                }
            },
            pageSize : 10,
            schema: {
                model: {
                    id: "Id",
                    fields: {
                        Id: {
                            //this field will not be editable (default value is true)
                            editable: false,
                            // a defaultValue will not be assigned (default value is false)
                            nullable: true
                        },
                        Nom: {
                            //set validation rules
                            type: "string",
                            validation: { required: true }
                        },
                        Prenom: {
                            //data type of the field {Number|String|Boolean|Date} default is String
                            type: "string",
                            validation: { required: true, min: 1 }
                        },
                        Telephone: {
                            type: "string",
                            validation: { required: false, min: 14, max: 14 }
                        },
                        MailContact: {
                            type: "string",
                            validation: { required: false }
                        },
                        CoupeId: {
                            type: "number",
                            defaultValue: 1,
                            type: "number",
                            validation: { required: true }
                        },
                    }
                }
            }
        });

        $("#responsablesCoupe").kendoGrid({
            dataSource: resp,
            pageable: {
                refresh: true,
                pageSizes: true,
                buttonCount: 5
            },
            sortable: true,
            groupable: true,
            filterable: true,
            autosync: true,
            toolbar: ["create"],
            columns: [
                    { field: "Nom", title: "Nom" },
                    { field: "Prenom", title: "Prénom" },
                    { field: "Telephone", title: "Téléphone" },
                    { field: "MailContact", title: "Email de Contact" },
                   { field: "CoupeId", values: coupes.data().toJSON(), title: "Coupe" },
                   { command: ["edit", "destroy"], title: "&nbsp;", width: "200px" }
            ],
            editable: "popup"
        });
    });
</script>