
<div class="col-sm-2">
    @RenderPage("../Shared/_Menu.cshtml")
</div>
<div class="col-sm-10">
    <h2>Affectation des Epreuves</h2>
    <div id="grilleAffectation">
    </div>
    <hr />
    <h2>Historique des Affectations</h2>
    <div id="histoAffectation">
    </div>
</div>

<script>
    var tapis;
    var epreuves;
    var source;

    function linkAreaToTrial(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));

        $.ajax({
            cache: false,
            type: 'POST',
            async: true,
            url: "CreateLink",
            data: kendo.stringify(dataItem),
            contentType: 'application/json',
        }).success(function (data) {
            $("#notification").data('kendoNotification').show({
                title: "Epreuve affectée."
            }, "success");            
            source.read();
            epreuves.read();
            var grid = $("#grilleAffectation").data('kendoGrid');
            var columns = grid.columns;
            columns[1].values = epreuves.data().toJSON();
            grid.setOptions({columns: grid.columns});
            grid.refresh();      
            $("#histoAffectation").data('kendoGrid').dataSource.read();
        }).fail(function () {
            $("#notification").data('kendoNotification').show({
                title: "Erreur à la sauvegarde du lien."
            }, "error");
        });
    }

    $(document).ready(function () {
        epreuves = new kendo.data.DataSource({
            transport: {
                read: {
                    url: "GetEpreuvesDisponibles",
                    async: false,
                    cache: false,
                    dataType: "json",
                    complete: function (jqXHR, textStatus) {
                        console.log(textStatus, "update");
                        if (textStatus === "error") {
                            $("#notification").data('kendoNotification').show({
                                title: "Echec Lecture des épreuves disponibles."
                            }, "error");
                        }
                    }
                },
                parameterMap: function (options, operation) {
                    if (operation !== "read" && options.models) {
                        return { models: kendo.stringify(options.models) };
                    }
                    else {
                        return kendo.stringify(options);
                    }
                }
            }
        });
        epreuves.read();

        source = new kendo.data.DataSource({
            transport: {
                read: {
                    url: "Get",
                    async: false,
                    cache: false,
                    dataType: "json",
                    complete: function (jqXHR, textStatus) {
                        console.log(textStatus, "update");
                        if (textStatus === "error") {
                            $("#notification").data('kendoNotification').show({
                                title: "Echec Lecture des affectations."
                            }, "error");
                        }
                    }
                },
                parameterMap: function (options, operation) {
                    if (operation !== "read" && options.models) {
                        return { models: kendo.stringify(options.models) };
                    }
                    else {
                        return kendo.stringify(options);
                    }
                }
            }, schema: {
                model: {
                    id: "Id",
                    fields: {
                        Id: {
                            editable: false,
                            nullable: false
                        },
                        Description: {
                            //set validation rules
                            type: "string",
                            editable: false
                        },
                        EpreuveId: {
                            field: "EpreuveId",
                            type: "number",
                            nullable: true
                        }
                    }
                }
            }
        });
        source.read();

        var epreuveTemplate = function (item) {
            var epreuve = { text: '' };
            for (var i = 0; i < epreuves.length; i++) {
                if (item.EpreuveId != null && item.EpreuveId != undefined && epreuves[i].value == item.EpreuveId) {
                    epreuve = epreuves[i];
                    break;
                }
            }
            return epreuve.text;
        }

        $("#grilleAffectation").kendoGrid({
            dataSource: source,
            pageable: {
                refresh: true,
                pageSizes: true,
                buttonCount: 5
            },
            save: function (e) {
                var epreuveId = $(e.container).find("[data-container-for='EpreuveId'] select").val();
                if (e.model.EpreuveId != epreuveId) {
                    e.model.EpreuveId = parseInt(epreuveId, 10);
                }
            },
            autosync: true,
            columns: [
                { field: "Description", title: "Description" },
                { field: "EpreuveId", title: "Epreuve", values: epreuves.data().toJSON() },//, template: epreuveTemplate },
                 {
                     command: [
                         {
                             name: "edit",
                             text: "Editer"
                         },
                         {
                             name: "linkAreaToTrial",
                             text: "Associer",
                             imageClass: "k-icon k-i-group",
                             click: linkAreaToTrial
                         }],
                     title: " ", width: "225px"
                 }],
            editable: "inline"
        });

        $("#histoAffectation").kendoGrid({
            dataSource: new kendo.data.DataSource({
                group: { field: "TapisNom" },
                transport: {
                    read: {
                        url: "GetHistorique",
                        async: false,
                        cache: false,
                        dataType: "json",
                        complete: function (jqXHR, textStatus) {
                            console.log(textStatus, "update");
                            if (textStatus === "error") {
                                $("#notification").data('kendoNotification').show({
                                    title: "Echec Lecture des affectations."
                                }, "error");
                            }
                        }
                    }
                },
                schema: {
                    model: {
                        fields: {
                            EpreuveId: {
                                type: "number",
                                editable: false
                            },
                            EpreuveNom: {
                                type: "string",
                                nullable: true
                            },
                            EpreuveStatut: {
                                type: "string",
                                editable: false
                            },
                            EpreuveStatutId: {
                                type: "number",
                                editable: false
                            },
                            TapisNom: {
                                type: "string",
                                editable: false
                            },
                            TapisId: {
                                type: "number",
                                editable: false
                            }
                        }
                    }
                }
            }),
            pageable: {
                refresh: true,
                pageSize: 25,
                pageSizes: [10, 25, 50]
            },
            autosync: true,
            columns: [
               { field: "EpreuveNom", title: "Epreuve" },
               { field: "EpreuveStatut", title: "Statut de l'Epreuve" },
               { field: "TapisNom", title: "Tapis associé" }]
        });
    });
</script>