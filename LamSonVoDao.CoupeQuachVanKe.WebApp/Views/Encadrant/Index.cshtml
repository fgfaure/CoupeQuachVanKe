<div class="col-sm-2">
    @RenderPage("../Shared/_Menu.cshtml")
</div>
<div class="col-sm-10">
    <h2>Liste des Encadrants</h2>
    <div id="encadrants">
    </div>
</div>
<script src="@System.Web.VirtualPathUtility.ToAbsolute("~/Scripts/kendo.all.min.js")"></script>
<script>

    var disponibilitesDataSource = new kendo.data.DataSource({
        transport: {
            read: {
                url: 'GetDates',
                cache : false
            }
        },
        schema: {
            model: {
                id: "Description",
                fields: {
                    Description: { type: "string" }
                }
            }
        }
    });

    function arbitreEditor(container, options) {
        $("<select multiple='multiple' data-bind='value : DispoArbitre'/>")
                .appendTo(container)
                .kendoMultiSelect({
                    dataTextField: "Description",
                    dataValueField: "Description",
                    dataSource: disponibilitesDataSource
                });
    }

    function administrateurEditor(container, options) {
        $("<select multiple='multiple' data-bind='value : DispoAdministrateur'/>")
                .appendTo(container)
                .kendoMultiSelect({
                    dataTextField: "Description",
                    dataValueField: "Description",
                    dataSource: disponibilitesDataSource
                });
    }

    function arbitreTemplate(dataItem) {
        var dispo = "";
        for (var i = 0; i < dataItem.DispoArbitre.length; i++) {
            dispo += dataItem.DispoArbitre[i].Description + ", "
        }
        dispo = dispo.substr(0, dispo.length - 2);
        return dispo;
    }

    function comTemplate(dataItem) {
        var dispo = "";
        for (var i = 0; i < dataItem.DispoAdministrateur.length; i++) {
            dispo += dataItem.DispoAdministrateur[i].Description + ", "
        }
        dispo = dispo.substr(0, dispo.length - 2);
        return dispo;
    }

    $(document).ready(function () {
        var tailles = new kendo.data.DataSource({
            transport: {
                read: {
                    async: false,
                    url: "../QVKApi/GetTailleTenues",
                    dataType: "json",
                    complete: function (jqXHR, textStatus) {
                        console.log(textStatus, "update");
                        if (textStatus === "error") {
                            $("#notification").data('kendoNotification').show({
                                title: "Echec Lecture des tailles."
                            }, "error");
                        }
                    }
                },
                parameterMap: function (options, operation) {
                    if (operation !== "read" && options.models) {
                        return { models: kendo.stringify(options.models) };
                    }
                    else {
                        return kendo.stringify(options);
                    }
                }
            },
            schema: {
                model: {
                    id: "value",
                    fields: {
                        value: {
                            //this field will not be editable (default value is true)
                            editable: false,
                            // a defaultValue will not be assigned (default value is false)
                            nullable: false
                        },
                        text: {
                            //set validation rules
                            type: "string",
                        }
                    }
                }
            }
        });
        tailles.read();

        var genres = [{ value: 1, text: "Féminin" }, { value: 2, text: "Masculin" }];

        var clubsDataSource = new kendo.data.DataSource({
            transport: {
                read: {
                    cache: false,
                    async: false,
                    url: "../QVKApi/GetClubs",
                    dataType: "json",
                    complete: function (jqXHR, textStatus) {
                        console.log(textStatus, "update");
                        if (textStatus === "error") {
                            $("#notification").data('kendoNotification').show({
                                title: "Echec Lecture des clubs."
                            }, "error");
                        }
                    }
                },
                parameterMap: function (options, operation) {
                    if (operation !== "read" && options.models) {
                        return { models: kendo.stringify(options.models) };
                    }
                    else {
                        return kendo.stringify(options);
                    }
                }
            },
            schema: {
                parse: function (data) {
                    var clubs = [];
                    for (var i = 0; i < data.length; i++) {
                        var club = {
                            value: data[i].Id,
                            text: data[i].Nom
                        };
                        clubs.push(club);
                    }
                    return clubs;
                },
                model: {
                    id: "Id",
                    fields: {
                        Id: {
                            //this field will not be editable (default value is true)
                            editable: false,
                            // a defaultValue will not be assigned (default value is false)
                            nullable: false
                        },
                        Nom: {
                            //set validation rules
                            type: "string",
                        }
                    }
                }
            }
        });
        clubsDataSource.read();

        var encadrants = new kendo.data.DataSource({
            transport: {
                read: {
                    cache: false,
                    url: "Get",
                    dataType: "json",
                    complete: function (jqXHR, textStatus) {
                        console.log(textStatus, "update");
                        if (textStatus === "error") {
                            $("#notification").data('kendoNotification').show({
                                title: "Echec Lecture des encadrants."
                            }, "error");
                        }
                    }
                },
                update: {
                    url: "Update",
                    dataType: "json",
                    contentType: "application/json",
                    type: "POST",
                    complete: function (jqXHR, textStatus) {
                        console.log(textStatus, "update");
                        if (textStatus === "error") {
                            $("#notification").data('kendoNotification').show({
                                title: "Echec Mise à jour."
                            }, "error");
                        }
                        else {
                            $("#notification").data('kendoNotification').show({
                                title: "Mise à jour réussie."
                            }, "success");
                        }
                    }
                },
                destroy: {
                    url: "Delete",
                    dataType: "json",
                    contentType: "application/json",
                    type: "POST",
                    complete: function (jqXHR, textStatus) {
                        console.log(textStatus, "delete");
                        if (textStatus === "error") {
                            $("#notification").data('kendoNotification').show({
                                title: "Echec Suppression."
                            }, "error");
                        }
                        else {
                            $("#notification").data('kendoNotification').show({
                                title: "Suppression réussie."
                            }, "success");
                        }
                    }
                },
                create: {
                    url: "Create",
                    dataType: "json",
                    contentType: "application/json",
                    type: "POST",
                    complete: function (jqXHR, textStatus) {
                        console.log(textStatus, "create");
                        if (textStatus === "error") {
                            $("#notification").data('kendoNotification').show({
                                title: "Echec Création."
                            }, "error");
                        }
                        else {
                            $("#notification").data('kendoNotification').show({
                                title: "Création réussie."
                            }, "success");
                        }
                    }
                },
                parameterMap: function (options, operation) {
                    if (operation !== "read" && options.models) {
                        return { models: kendo.stringify(options.models) };
                    }
                    else {
                        return kendo.stringify(options);
                    }
                }
            },
            schema: {
                model: {
                    id: "Id",
                    fields: {
                        Id: {
                            editable: false,
                            nullable: false
                        },
                        Nom: {
                            editable: true,
                            type: "string",
                            validation: { required: true }
                        },
                        Prenom: {
                            editable: true,
                            type: "string",
                            validation: { required: true }
                        },
                        MailContact: {
                            editable: true,
                            type: "string",
                            validation: { required: false }
                        },
                        ClubId: {
                            field: "ClubId",
                            type: "number",
                            defaultValue: 1
                        },
                        EstCompetiteur: {
                            editable: true,
                            type: "boolean"
                        },
                        TailleTenueId: {
                            editable: true,
                            type: "number",
                            defaultValue: 1,
                            validation: { required: true }
                        },
                        CategorieId: {
                            type: "number",
                            defaultValue: 1,
                            type: "number",
                            validation: { required: true }
                        },
                        GenreId: {
                            type: "number",
                            defaultValue: 1,
                            type: "number",
                            validation: { required: true }
                        },
                        DispoAdministrateur: {},
                        DispoArbitre: {}
                    }
                }
            },
            pageSize: 10
        });

        $("#encadrants").kendoGrid({
            dataSource: encadrants,
            pageable: {
                refresh: true,
                pageSizes: true,
                buttonCount: 5
            },
            sortable: true,
            groupable: true,
            filterable: true,
            autosync: true,
            toolbar: [
              { name: "excel", text: "Exporter en Excel" },
              { name: "create", text: "Ajouter" }
            ],
            excel: {
                allPages: true,
                fileName: "ListingEncadrants.xlsx",
                proxyURL: "ExcelSave",
                filterable: true
            },
            columns: [
                    { field: "Nom", title: "Nom" },
                    { field: "Prenom", title: "Prénom" },
                    { field: "MailContact", title: "Email" },
                    { field: "EstCompetiteur", title: "Participe", template: '<input type="checkbox" #= EstCompetiteur ? "checked=checked" : "" # disabled="disabled" ></input>', width: "100px" },
                    { field: "ClubId", title: "Club", values: clubsDataSource.data().toJSON() },
                    { field: "TailleTenueId", title: "Taille", values: tailles.data().toJSON(), width: "75px" },
                    { field: "GenreId", title: "Sexe", values: genres, width: "85px" },
                    { field: "DispoArbitre", title: "Arbitre", editor: arbitreEditor, template: arbitreTemplate },
                    { field: "DispoAdministrateur", title: "Administrateur", editor: administrateurEditor, template: comTemplate },
                    { command: ["edit", "destroy"], title: "&nbsp;", width: "190px" }
            ],
            editable: "popup"
        });
    });
</script>