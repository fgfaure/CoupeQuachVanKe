<div class="col-sm-2">
    @RenderPage("../Shared/_Menu.cshtml")
</div>
<div class="col-sm-10">
    <h2>Liste des Catégories d'Epreuves</h2>
    <div id="types">
    </div>
</div>

<script>
    $(document).ready(function () {
        var coupes = new kendo.data.DataSource({
            transport: {
                read: {
                    async: false,
                    url: "../QVKApi/GetCoupes",
                    dataType: "json",
                    complete: function (jqXHR, textStatus) {
                        console.log(textStatus, "update");
                        if (textStatus === "error") {
                            $("#notification").data('kendoNotification').show({
                                title: "Echec Lecture des coupes."
                            }, "error");
                        }
                    }
                },
                parameterMap: function (options, operation) {
                    if (operation !== "read" && options.models) {
                        return { models: kendo.stringify(options.models) };
                    }
                    else {
                        return kendo.stringify(options);
                    }
                }
            },
            schema: {
                parse: function (data) {
                    var cups = [];
                    for (var i = 0; i < data.length; i++) {

                        cups.push({
                            value: data[i].Id,
                            text: data[i].Nom
                        });
                    }
                    return cups;
                },
                model: {
                    id: "Id",
                    fields: {
                        Id: {
                            //this field will not be editable (default value is true)
                            editable: false,
                            // a defaultValue will not be assigned (default value is false)
                            nullable: false
                        },
                        Nom: {
                            //set validation rules
                            type: "string",
                        }
                    }
                }
            }
        });
        coupes.read();

        var typeEpreuves = new kendo.data.DataSource({
            transport: {
                read: {
                    cache: false,
                    url: "Get",
                    dataType: "json",
                    complete: function (jqXHR, textStatus) {
                        console.log(textStatus, "update");
                        if (textStatus === "error") {
                            $("#notification").data('kendoNotification').show({
                                title: "Echec Lecture des types d'épreuves."
                            }, "error");
                        }
                    }
                },
                update: {
                    url: "Update",
                    dataType: "json", // "jsonp" is required for cross-domain requests; use "json" for same-domain requests
                    contentType: "application/json",
                    type: "POST",
                    complete: function (jqXHR, textStatus) {
                        console.log(textStatus, "update");
                        if (textStatus === "error") {
                            $("#notification").data('kendoNotification').show({
                                title: "Echec Mise à jour."
                            }, "error");
                        }
                        else {
                            $("#notification").data('kendoNotification').show({
                                title: "Mise à jour réussie."
                            }, "success");
                        }
                    }
                },
                destroy: {
                    url: "Delete",
                    dataType: "json",
                    contentType: "application/json",
                    type: "POST",
                    complete: function (jqXHR, textStatus) {
                        console.log(textStatus, "delete");
                        if (textStatus === "error") {
                            $("#notification").data('kendoNotification').show({
                                title: "Echec Suppression."
                            }, "error");
                        }
                        else {
                            $("#notification").data('kendoNotification').show({
                                title: "Suppression réussie."
                            }, "success");
                        }
                    }
                },
                create: {
                    url: "Create",
                    dataType: "json",
                    contentType: "application/json",
                    type: "POST",
                    complete: function (jqXHR, textStatus) {
                        console.log(textStatus, "create");
                        if (textStatus === "error") {
                            $("#notification").data('kendoNotification').show({
                                title: "Echec Création."
                            }, "error");
                        }
                        else {
                            $("#notification").data('kendoNotification').show({
                                title: "Création réussie."
                            }, "success");
                        }
                    }
                },
                parameterMap: function (options, operation) {
                    if (operation !== "read" && options.models) {
                        return { models: kendo.stringify(options.models) };
                    }
                    else {
                        return kendo.stringify(options);
                    }
                }
            },
            schema: {
                model: {
                    id: "Id",
                    fields: {
                        Id: {
                            editable: false,
                            nullable: false
                        },
                        CoupeId: {
                            field: "CoupeId",
                            type: "number",
                            defaultValue: 1
                        },
                        Nom: {
                            editable: true,
                            type: "string",
                            validation: { required: true }
                        },
                        Description: {
                            editable: true,
                            type: "string"
                        },
                        Technique: {
                            editable: true,
                            type: "boolean"
                        },
                        UseSwissSystem: {
                            editable: true,
                            type: "boolean"
                        }
                    }
                }
            },
            pageSize: 10
        });

        $("#types").kendoGrid({
            dataSource: typeEpreuves,
            pageable: {
                refresh: true,
                pageSizes: true,
                buttonCount: 5
            },
            sortable: true,
            groupable: true,
            filterable: true,
            autosync: true,
            toolbar: ["create"],
            columns: [
                    { field: "Nom", title: "Nom" },
                    { field: "Description", title: "Description" },
                    { field: "Technique", title: "Technique", template: '<input type="checkbox" #= Technique ? "checked=checked" : "" # disabled="disabled"/>' },
                    { field: "UseSwissSystem", title: "Système Suisse", template: '<input type="checkbox" #= UseSwissSystem ? "checked=checked" : "" # disabled="disabled"/>' },
                    { field: "CoupeId", width: "200px", values: coupes.data().toJSON(), title: "Coupe" },
                { command: ["edit", "destroy"], title: "&nbsp;", width: "250px" }
            ],
            editable: "popup"
        });
    });
</script>
