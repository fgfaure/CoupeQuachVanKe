
<div class="col-sm-2">
    @RenderPage("../Shared/_Menu.cshtml")
</div>
<div class="col-sm-10">
    <div id="aires">       
    </div>
</div>
<script>
    $(document).ready(function () {

        var coupes = new kendo.data.DataSource({
            transport: {
                read: {
                    async: false,
                    url: "../QVKApi/GetCoupes",
                    dataType: "json",
                    complete: function (jqXHR, textStatus) {
                        console.log(textStatus, "update");
                        if (textStatus === "error") {
                            $("#notification").data('kendoNotification').show({
                                title: "Echec Lecture des coupes."
                            }, "error");
                        }
                    }
                },
                parameterMap: function (options, operation) {
                    if (operation !== "read" && options.models) {
                        return { models: kendo.stringify(options.models) };
                    }
                    else {
                        return kendo.stringify(options);
                    }
                }
            },
            schema: {
                parse: function (data) {
                    var coupes = [];
                    for (var i = 0; i < data.length; i++) {
                        coupes.push({
                            value: data[i].Id,
                            text: data[i].Nom
                        });
                    }
                    return coupes;
                },
                model: {
                    id: "Id",
                    fields: {
                        Id: {
                            //this field will not be editable (default value is true)
                            editable: false,
                            // a defaultValue will not be assigned (default value is false)
                            nullable: false
                        },
                        Nom: {
                            //set validation rules
                            type: "string",
                        }
                    }
                }
            }
        });
        coupes.read();

        var clients = new kendo.data.DataSource({
            transport: {
                read: {
                    async: false,
                    url: "../QVKApi/GetClients",
                    dataType: "json",
                    complete: function (jqXHR, textStatus) {
                        console.log(textStatus, "update");
                        if (textStatus === "error") {
                            $("#notification").data('kendoNotification').show({
                                title: "Echec Lecture des clients réseaux."
                            }, "error");
                        }
                    }
                },
                parameterMap: function (options, operation) {
                    if (operation !== "read" && options.models) {
                        return { models: kendo.stringify(options.models) };
                    }
                    else {
                        return kendo.stringify(options);
                    }
                }
            },
            schema: {
                parse: function (data) {
                    var coupes = [];
                    for (var i = 0; i < data.length; i++) {
                        coupes.push({
                            value: data[i].Id,
                            text: data[i].ClientName
                        });
                    }
                    return coupes;
                },
                model: {
                    id: "Id",
                    fields: {
                        Id: {
                            //this field will not be editable (default value is true)
                            editable: false,
                            // a defaultValue will not be assigned (default value is false)
                            nullable: false
                        },
                        Nom: {
                            //set validation rules
                            type: "string",
                        }
                    }
                }
            }
        });
        clients.read();

        var aires = new kendo.data.DataSource({          
            transport: {
                read: {
                    url: "Get",
                    dataType: "json",
                    complete: function (jqXHR, textStatus) {
                        console.log(textStatus, "update");
                        if (textStatus === "error") {
                            $("#notification").data('kendoNotification').show({
                                title: "Echec Lecture des aires."
                            }, "error");
                        }
                    }
                },
                update: {
                    url: "Update",
                    dataType: "json", // "jsonp" is required for cross-domain requests; use "json" for same-domain requests
                    contentType: "application/json",
                    type: "POST",
                    complete: function (jqXHR, textStatus) {
                        console.log(textStatus, "update");
                        if (textStatus === "error") {
                            $("#notification").data('kendoNotification').show({
                                title: "Echec Mise à jour."
                            }, "error");
                        }
                        else {
                            $("#notification").data('kendoNotification').show({
                                title: "Mise à jour réussie."
                            }, "success");
                        }
                    }
                },
                destroy: {
                    url: "Delete",
                    dataType: "json",
                    contentType: "application/json",
                    type: "POST",
                    complete: function (jqXHR, textStatus) {
                        console.log(textStatus, "delete");
                        if (textStatus === "error") {
                            $("#notification").data('kendoNotification').show({
                                title: "Echec Suppression."
                            }, "error");
                        }
                        else {
                            $("#notification").data('kendoNotification').show({
                                title: "Suppression réussie."
                            }, "success");
                        }
                    }
                },
                create: {
                    url: "Create",
                    dataType: "json",
                    contentType: "application/json",
                    type: "POST",
                    complete: function (jqXHR, textStatus) {
                        console.log(textStatus, "create");
                        if (textStatus === "error") {
                            $("#notification").data('kendoNotification').show({
                                title: "Echec Création."
                            }, "error");
                        }
                        else {
                            $("#notification").data('kendoNotification').show({
                                title: "Création réussie."
                            }, "success");
                        }
                    }
                },
                parameterMap: function (options, operation) {
                    if (operation !== "read" && options.models) {
                        return { models: kendo.stringify(options.models) };
                    }
                    else {
                        return kendo.stringify(options);
                    }
                }
            },
            pageSize: 10,
            schema: {
                model: {
                    id: "Id",
                    fields: {
                        Id: {
                            //this field will not be editable (default value is true)
                            editable: false,
                            // a defaultValue will not be assigned (default value is false)
                            nullable: true
                        },
                        Description: {
                            //set validation rules
                            type: "string",
                            validation: { required: true }
                        },
                        CoupeId: {
                            field: "CoupeId",
                            type: "number",
                            defaultValue: 1
                        },
                        NetClientId: {
                            field: "NetClientId",
                            type: "number",
                            defaultValue: 1
                        },
                    }
                }
            }
        });

        $("#aires").kendoGrid({
            dataSource: aires,
            pageable: {
                refresh: true,
                pageSizes: true,
                buttonCount: 5
            },
            autosync: true,
            toolbar: ["create"],
            columns: [
                { field: "Description", title: "Description" },
                { field: "CoupeId", title: "Coupe", values: coupes.data().toJSON() },
                { field: "NetClientId", title: "Table associée", values: clients.data().toJSON() },
                { command: ["edit", "destroy"], title: "&nbsp;", width: "200px" }],
            editable: "popup"
        });
    });
</script>
