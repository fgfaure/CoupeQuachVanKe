<style scoped>
    .panel-heading a:after {
        font-family: 'Glyphicons Halflings';
        content: "\e114";
        float: right;
        color: white;
    }

    .panel-heading a.collapsed:after {
        content: "\e080";
    }
</style>
<div class="col-md-12">
    <div class="well well-lg"><h2>Epreuve @ViewBag.ContestName</h2></div>
    <div>
        <div id="panelEncadrement" class="panel panel-primary">
            <div class="panel-heading">
                <h3 class="panel-title">
                    <a id="a1" data-toggle="collapse" data-target="#admins"
                       href="#admins">
                        Configuration des administrateurs et juges
                    </a>
                </h3>
            </div>
            <div id="admins" class="panel-collapse collapse in">
                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="panel panel-primary">
                                <div class="panel-body">
                                    <div class="input-group">
                                        <span class="input-group-addon" id="juges-addon">Juges : </span>
                                        <input class="form-control" id="juges" aria-describedby="juges-addon">
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="panel panel-primary">
                                <div class="panel-body">
                                    <div class="input-group">
                                        <span class="input-group-addon" id="admins-addon">Administrateurs : </span>
                                        <input class="form-control" id="coms" aria-describedby="admins-addon">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div id="panelAppel" class="panel panel-primary">
        <div class="panel-heading">
            <h3 class="panel-title">
                <a id="a2" data-toggle="collapse" data-target="#appel"
                   href="#appel" class="collapsed">
                    Appel des compétiteurs et vérification
                </a>
            </h3>
        </div>
        <div id="appel" class="panel-collapse collapse">
            <div class="panel-body">
                <div id="competiteurs"></div>
                <hr />
                <p class="text-right">Terminer l'appel et enregistrer les juges et administrateurs.      <button class="btn btn-success btn-lg right" id="validatePresence">Valider</button></p>
            </div>
        </div>
    </div>
    <div id="panelPool" class="panel panel-primary">
        <div class="panel-heading">
            <h3 class="panel-title">
                <a id="a3" @*data-toggle="collapse" data-target="#epreuve"
                       href="#epreuve"*@ class="collapsed">
                    Déroulement de l'épreuve
                </a>
            </h3>
        </div>
        <div id="epreuve" class="panel-collapse collapse">
            <div class="panel-body">
                <div id="grid"></div>
                <hr />
                <p class="text-right">Afficher la finale.      <button id="showFinale" class="btn btn-success btn-lg right">Valider</button></p>

            </div>
        </div>
    </div>
    <div id="panelFinale" class="panel panel-primary">
        <div class="panel-heading">
            <h3 class="panel-title">
                <a id="a4" @*data-toggle="collapse" data-target="#epreuve"
                       href="#epreuve"*@ class="collapsed">
                    Finale
                </a>
            </h3>
        </div>
        <div id="finale" class="panel-collapse collapse">
            <div class="panel-body">
                <div id="finaleTree"></div>
                <hr />
                <p class="text-right">Afficher le classement.      <button id="showResults" class="btn btn-success btn-lg right">Valider</button></p>

            </div>
        </div>
    </div>
    <div id="panelResultats" class="panel panel-primary">
        <div class="panel-heading">
            <h3 class="panel-title">
                <a id="a5" @*data-toggle="collapse" data-target="#epreuve"
                       href="#epreuve"*@ class="collapsed">
                    Classement Final
                </a>
            </h3>
        </div>
        <div id="classement" class="panel-collapse collapse">
            <div class="panel-body">
                <div id="classementGrid"></div>
                <hr />
                <p class="text-right">Clôturer l'épreuve.      <button id="validateContest" class="btn btn-success btn-lg right">Valider</button></p>

            </div>
        </div>
    </div>
</div>
<script src="@System.Web.VirtualPathUtility.ToAbsolute("~/Scripts/kendo.all.min.js")"></script>

<script>
    function total(dataItem, Score1) {
        var sum = 0;
        var divider = 0;
        if (Score1 == "Score1") {
            for (var i = 1; i < 4; i++) {
                if (dataItem["Note" + i] !== null && dataItem["Note" + i] >= 0 && dataItem["Note" + i] <= 20) {
                    sum += dataItem["Note" + i];
                    divider += 1;
                }
            }
        } else {
            for (var j = 4; j < 7; j++) {
                if (dataItem["Note" + j] !== null && dataItem["Note" + j] >= 0 && dataItem["Note" + j] <= 20) {
                    sum += dataItem["Note" + j];
                    divider += 1;
                }
            }
        }
        if (divider === 0) {
            return "";
        }
        return sum;
    }

    var scoreEditor = function (container, options) {
        $('<input data-bind="value:' + options.field + '"/>')
            .appendTo(container)
            .kendoNumericTextBox({
                spinners: false,
                decimals: 0,
                min: 0,
                max: 20,
                format: "n0"
            });
    };

    var competiteursPresents = [];
    var competiteursFinale = [];
    var encadrants = new kendo.data.DataSource({
        transport: {
            read: {
                cache: false,
                url: "../QVKApi/GetEncadrants",
                dataType: "json",
                contentType: "application/json",
                type: "GET",
                complete: function (jqXHR, textStatus) {
                    console.log(textStatus, "update");
                    if (textStatus === "error") {
                        $("#notification").data('kendoNotification').show({
                            title: "Echec Lecture des encadrants."
                        }, "error");
                    }
                }
            },
            parameterMap: function (options) {
                return JSON.stringify(options);
            }
        },
        schema: {
            parse: function (data) {
                var datas = [];
                for (var i = 0; i < data.length; i++) {
                    datas.push({
                        Id: data[i].Id,
                        text: data[i].Nom + " " + data[i].Prenom
                    });
                }
                return datas;
            },
            model: {
                id: "Id",
                fields: {
                    Id: {
                        editable: false,
                        nullable: false
                    },
                    Nom: {
                        editable: false,
                        type: "string"
                    },
                    Prenom: {
                        editable: false,
                        type: "string"
                    },
                    MailContact: {
                        editable: false,
                        type: "string"
                    },
                    TailleTenueId: {
                        editable: false,
                        type: "number"
                    },
                    EstCompetiteur: {
                        editable: false,
                        type: "boolean"
                    },
                    GenreId: {
                        editable: false,
                        type: "number"
                    }
                }
            }
        }
    });

    var dataSource = new kendo.data.DataSource({
        autoSync: true,
        transport: {
            read: function (operation) {
                operation.success(competiteursPresents);
            },
            update: function (operation) {
                operation.data.Score1 = total(operation.data, "Score1");
                var oldscore2 = operation.data.Score2;
                operation.data.Score2 = total(operation.data, "Score2");
                operation.success(operation.data);
                if (operation.data.Score2 != oldscore2) {
                    var dsSort = [];
                    dsSort.push({
                        field: "Score2",
                        dir: "desc"
                    }, {
                        field: "Score1",
                        dir: "desc"
                    });
                    $("#grid").data('kendoGrid').dataSource.sort(dsSort);
                }
            }
        },
        sort: [{
            field: "Score1",
            dir: "desc"
        }],
        schema: {
            model: {
                id: "ParticipantId",
                fields: {
                    ParticipantId: {
                        editable: false,
                        nullable: false
                    },
                    Nom: {
                        type: "string",
                        editable: false
                    },
                    Prenom: {
                        type: "string",
                        editable: false
                    },
                    Club: {
                        type: "string",
                        editable: false
                    },
                    Note1: {
                        type: "number"
                    },
                    Note2: {
                        type: "number"
                    },
                    Note3: {
                        type: "number"
                    },
                    Note4: {
                        type: "number"
                    },
                    Note5: {
                        type: "number"
                    },
                    Note6: {
                        type: "number"
                    },
                    Score1: {
                        type: "number",
                        editable: false
                    },
                    Score2: {
                        type: "number",
                        editable: false
                    },
                    Classement: {
                        type: 'number',
                        editable: false
                    }
                }
            }
        }
    });

    function visualTemplate(options) {
        var dataviz = kendo.dataviz;
        var g = new dataviz.diagram.Group();
        var dataItem = options.dataItem;
        //console.log("visualTemplate " + dataItem.Nom);

        g.append(new dataviz.diagram.Rectangle({
            width: 200,
            height: 30,
            fill: dataItem.Couleur
        }));

        var fillTextColor = (dataItem.Couleur === "#FF0000" || dataItem.Couleur === "#0000FF") ? "#dedede" : "#000000";

        g.append(new dataviz.diagram.TextBlock({
            text: dataItem.Nom + ' ' + dataItem.Prenom,
            x: 5,
            y: 5,
            fill: fillTextColor
        }));

        g.append(new dataviz.diagram.Rectangle({
            width: 30,
            x: 200,
            height: 30,
            fill: "ffffff"
        }));

        var textNode = "";

        if (dataItem.Vainqueur !== null) {
            textNode = (dataItem.Vainqueur) ? "G" : "P";
        }

        g.append(new dataviz.diagram.TextBlock({
            text: textNode,
            x: 210,
            y: 6,
            fill: "#000000"
        }));

        return g;
    }

    function findTreeviewNodeById(haystack, needle) {
        var uid = null;

        for (var i = 0; i < haystack.length; i++) {
            haystack[i].load();
            if (haystack[i].ParticipantId == needle) {
                uid = haystack[i].uid;
            }
            else if (haystack[i].Children != null) {
                uid = findTreeviewNodeById(haystack[i].Children, needle);
            }

            if (uid != null)
                break;
        }

        return uid;
    }


    function cloneProperties(o1, o2) {
        o1.Nom = o2.Nom;
        o1.ParticipantId = o2.ParticipantId;
        o1.Club = o2.Club;
        o1.Prenom = o2.Prenom;
        o1.EpreuveId = o2.EpreuveId;
        o1.ClubId = o2.ClubId;

        if (o1.parentNode && o1.parentNode() === undefined) {
            o1.Vainqueur = o2.Vainqueur;
        }
    }

    function createDiagram(selector, source) {
        var kendodatasource = new kendo.data.HierarchicalDataSource({
            transport: {
                read: function (e) {
                    console.log("reading competiteurs");
                    e.success(source);
                    $("div [data-role$='surface'").css('width', 'auto');
                    var options = $(selector).data('kendoDiagram').options;
                    var verticalSeparation = options.layout.verticalSeparation;
                    var shapeHeight = options.shapeDefaults.height;
                    var computed = 2 * shapeHeight + 5 * verticalSeparation;

                    $(selector + " > div [data-role$='surface'").css('height', computed);
                },
                update: function (e) {
                    var competiteur = e.data;
                    console.log("updating compétiteurs");
                    var uid = findTreeviewNodeById(competiteurDataSource.data(), competiteur.ParticipantId);
                    var item = competiteurDataSource.getByUid(uid);
                    item.set('Vainqueur', competiteur.Vainqueur);
                    competiteurDataSource.read();
                },
                parameterMap: function (options, operation) {
                    if (operation !== "read") {
                        return { models: kendo.stringify(options.models || [options]) };
                    }
                }
            },
            error: function (e) {
                alert("Status: " + e.status + "; Error message: " + e.errorThrown);
            },
            schema: {
                model: {
                    id: "id",
                    fields: {
                        id: { from: "Id", type: "number", editable: false },
                        Nom: { type: "string", editable: false },
                        Couleur: { type: "string", editable: false },
                        Vainqueur: { type: "boolean", editable: true, nullable: true },
                        Rank: { type: "number", editable: false, nullable: false },
                        Classement: { type: "string", editable: false }
                    },
                    children: "Children"
                }
            }
        });

        $(selector).kendoDiagram({
            dataSource: kendodatasource,
            layout: {
                type: "tree",
                subtype: "left",
                horizontalSeparation: 50,
                verticalSeparation: 25
            },
            editable: {
                resize: false,
                tools: [""]
            },
            shapeDefaults: {
                visual: visualTemplate,
                height: 30,
                content: {
                    fontSize: 14,
                    align: "left",
                    color: "#DEDEDE"
                },
                editable: {
                    tools: ["edit"],
                    connect: false
                }
            },
            connectionDefaults: {
                editable: false,
                selection: false
            },
            zoomRate: 1,
            zoomMax: 1,
            zoomMin: 1,
            edit: function (e) {
                console.log("edit");

            },
            save: function (e) {
                if (e.shape.Vainqueur === null) {
                    e.shape.Vainqueur = false;
                }
                var siblings = e.shape.parent();
                var sibling = {};
                if (e.shape.parent().length == 2) {
                    for (var i = 0; i < siblings.length; i++) {
                        if (siblings[i].uid != e.shape.uid) {
                            sibling = siblings[i];
                            break;
                        }
                    }

                    sibling.Vainqueur = !e.shape.Vainqueur
                    if (e.shape.Vainqueur) {
                        cloneProperties(sibling.parentNode(), e.shape);
                    }
                    else {
                        cloneProperties(sibling.parentNode(), sibling);
                    }
                }
                kendodatasource.sync();
                $(selector).data('kendoDiagram').setDataSource(kendodatasource);
            }
        });
    }

    $(document).ready(function () {
        $(window).on('beforeunload', function () {
            return 'Attention une épreuve est en cours, il est important de ne pas quitter la page!';
        });

        $("#panelPool, #panelFinale, #panelResultats").hide();
        $("#juges").kendoMultiSelect({
            placeholder: "Choisissez les juges...",
            value: "Choisissez les juges...",
            dataTextField: "text",
            dataValueField: "Id",
            dataSource: encadrants,
            maxSelectedItems: 3
        });

        $("#coms").kendoMultiSelect({
            placeholder: "Choisissez les administrateurs...",
            value: "Choisissez les administrateurs...",
            dataTextField: "text",
            dataValueField: "Id",
            dataSource: encadrants,
            maxSelectedItems: 3
        });

        var competiteurDataSource = new kendo.data.DataSource({
            transport: {
                read: {
                    cache: false,
                    url: "GetPresentiel",
                    dataType: "json",
                    complete: function (jqXHR, textStatus) {
                        console.log(textStatus, "update");
                        if (textStatus === "error") {
                            $("#notification").data('kendoNotification').show({
                                title: "Echec Lecture des compétiteurs."
                            }, "error");
                        }
                    }
                },
                parameterMap: function (options, operation) {
                    if (operation !== "read" && options.models) {
                        return { models: kendo.stringify(options.models) };
                    }
                    else {
                        return kendo.stringify(options);
                    }
                }
            },
            schema: {
                model: {
                    id: "ParticipantId",
                    fields: {
                        ParticipantId: {
                            editable: false,
                            nullable: false
                        },
                        Nom: {
                            editable: false,
                            type: "string"
                        },
                        Prenom: {
                            editable: false,
                            type: "string"
                        },
                        Club: {
                            field: "Club",
                            type: "string"
                        },
                        Present: {
                            editable: true,
                            type: "boolean"
                        }
                    }
                }
            }
        });

        $("#competiteurs").kendoGrid({
            dataSource: competiteurDataSource,
            pageable: {
                refresh: true,
                pageSizes: true,
                buttonCount: 5
            },
            selectable : true,
            autosync: true,
            columns: [
                    { field: "Nom", title: "Nom" },
                    { field: "Prenom", title: "Prénom" },
                     { field: "Club", width: "200px", title: "Club" },
                     { field: "Present", title: "Présent", template: '<input type="checkbox" #= Present ? "checked=checked" : "" # disabled="disabled" ></input>' }
            ],
            editable: "incell"
        });

        //
        $("#showFinale").off('click').on('click', function (e) {
            $("#panelFinale").show(1000);
            var pool = $("#grid").data('kendoGrid');
            var first = pool.dataSource.view().at(0);
            var second = pool.dataSource.view().at(1);

            competiteursFinale = [
                {
                    Id: 1,
                    Nom: "",
                    Prenom: "",
                    Couleur: "#ffd700",
                    Vainqueur: null,
                    Rank: 0,
                    Classement: 1,
                    Children: [{
                        Id: first.ParticipantId,
                        ParticipantId: first.ParticipantId,
                        Nom: first.Nom,
                        Prenom: first.Prenom,
                        Couleur: "#0000FF",
                        Vainqueur: null,
                        Rank: 1,
                        Classement: 0,
                        Children: []
                    }, {
                        Id: second.ParticipantId,
                        ParticipantId: second.ParticipantId,
                        Nom: second.Nom,
                        Prenom: second.Prenom,
                        Couleur: "#FF0000",
                        Vainqueur: null,
                        Rank: 1,
                        Classement: 0,
                        Children: []
                    }]
                }]

            createDiagram("#finaleTree", competiteursFinale);
            $("#a3").not('.collapsed').trigger('click');
            $("#a3").removeAttr('data-toggle').removeAttr('data-target').attr('href', "#").addClass("collapsed");
            $("#panelPool").hide(1000);
            $("#a4").attr('data-toggle', 'collapse').attr('data-target', '#finale').attr('href', "#finale").removeClass("collapsed");
            $("#a4").trigger('click');
        });

        $("#showResults").off('click').on('click', function (e) {
            $("#panelResultats").show(1000);
            var finaleData = $("#grid").data('kendoGrid').dataSource.view();
            var first = finaleData[0];
            var second = finaleData[1];

            if ($("#finaleTree").data('kendoDiagram').dataSource.at(0).ParticipantId != first.ParticipantId) {
                var b = finaleData[1];
                finaleData[1] = finaleData[0];
                finaleData[0] = b;
            }

            $("#classementGrid").kendoGrid({
                dataSource: finaleData,
                columns: [
                    { field: "Nom", title: "Nom" },
                    { field: "Prenom", title: "Prénom" },
                    {
                        field: "Classement",
                        title: "Classement",
                        width: 150,
                        template: function (dataItem) {
                            var grid = $("#classementGrid").data('kendoGrid');
                            var rowIndex = grid.dataSource.view().indexOf(dataItem);
                            dataItem.Classement = rowIndex + 1;
                            return "<b>" + (rowIndex + 1) + "</b>";
                        }
                    }
                ]
            });

            $("#a4").not('.collapsed').trigger('click');
            $("#a4").removeAttr('data-toggle').removeAttr('data-target').attr('href', "#").addClass("collapsed");
            $("#panelFinale").hide(1000);
            $("#a5").attr('data-toggle', 'collapse').attr('data-target', '#classement').attr('href', "#classement").removeClass("collapsed");
            $("#a5").trigger('click');
        });

        $("#validateContest").off('click').on('click', function (e) {
            var grid = $("#classementGrid").data('kendoGrid');
            var results = [];
            $.each(grid.dataSource.data(), function (i, e) {
                results.push(e);
            });

            $.ajax({
                cache: false,
                type: 'POST',
                async: true,
                url: "TerminerEpreuve",
                data: kendo.stringify({ resultats: results }),
                contentType: 'application/json',
                dataType: 'json'
            }).success(function (response) {
                $(window).off('beforeunload');
                window.location.href = response.Uri;
            }).fail(function () {
                $("#notification").data('kendoNotification').show({
                    title: "Erreur à la clôture."
                }, "error");
            });
        });

        $("#validatePresence").off('click').on('click', function (e) {
            var grid = $("#competiteurs").data('kendoGrid');
            var competiteurs = [];
            $.each(grid.dataSource.data(), function (i, e) {
                competiteurs.push(e);
            });

            var encadrants = [];
            $.each($("#juges").data('kendoMultiSelect').dataItems(), function (i, e) {
                encadrants.push({ Id: e.Id, Role: "Arbitre" });
            });
            $.each($("#coms").data('kendoMultiSelect').dataItems(), function (i, e) {
                encadrants.push({ Id: e.Id, Role: "Commissaire" });
            });

            $.ajax({
                cache: false,
                type: 'POST',
                async: true,
                url: "UpdatePresentielTechnique",
                data: kendo.stringify({ participations: competiteurs, encadrants: encadrants }),
                contentType: 'application/json',
                dataType: 'json'
            }).success(function (result, textStatus) {
                $("#panelPool").show(1000);
                console.log(textStatus, "validation OK");
                $("#notification").data('kendoNotification').show({
                    title: "Appel des compétiteurs validé."
                }, "success");
                competiteursPresents = result;
                $("#grid").kendoGrid({
                    dataSource: dataSource,
                    groupable: false,
                    sortable: false,
                    resizable: false,
                    reorderable: false,
                    pageable: false,
                    editable: "incell",
                    columns: [{
                        field: "Nom",
                        title: "Nom",
                        width: 150
                    }, {
                        field: "Prenom",
                        title: "Prénom",
                        width: 150
                    }, {
                        field: "Club",
                        title: "Club",
                        width: 200
                    }, {
                        title: "Notes",
                        columns: [{
                            title: "Passage 1",
                            columns: [{
                                field: "Note1",
                                width: 60,
                                editor: scoreEditor,
                                title: "Juge 1"
                            }, {
                                field: "Note2",
                                width: 60,
                                editor: scoreEditor,
                                title: "Juge 2"
                            }, {
                                field: "Note3",
                                width: 60,
                                editor: scoreEditor,
                                title: "Juge 3"
                            }, {
                                field: "Score1",
                                width: 60,
                                title: "Total"
                            }]
                        }, {
                            title: "Passage 2",
                            columns: [{
                                field: "Note4",
                                width: 60,
                                editor: scoreEditor,
                                title: "Juge 1"
                            }, {
                                field: "Note5",
                                width: 60,
                                editor: scoreEditor,
                                title: "Juge 2"
                            }, {
                                field: "Note6",
                                width: 60,
                                editor: scoreEditor,
                                title: "Juge 3"
                            }, {
                                field: "Score2",
                                width: 60,
                                title: "Total"
                            }]
                        }]
                    }, {
                        field: "Classement",
                        title: "Classement",
                        width: 90,
                        template: function (dataItem) {
                            console.log("fetching total");
                            var grid = $("#grid").data('kendoGrid');
                            if ((dataItem.Score1 === null || dataItem.Score1 === "") && (dataItem.Score2 === null || dataItem.Score2 === "")) {
                                return "";
                            }
                            var rowIndex = grid.dataSource.view().indexOf(dataItem);
                            dataItem.Classement = rowIndex + 1;
                            return rowIndex + 1;
                        }
                    }],
                    dataBound: function (e) {
                        var gridDataSource = e.sender.dataSource;
                        for (var i = 0; i < gridDataSource.data().length; i++) {
                            var dataItem = gridDataSource.at(i);
                            var score1 = total(dataItem, "Score1");
                            var Score2 = total(dataItem, "Score2");

                            if (score1 != dataItem.Score1) {
                                //                    console.log("set Score1");
                                dataItem.Score1 = score1;
                            }
                            if (Score2 != dataItem.Score2) {
                                //                    console.log("set Score2");
                                dataItem.Score2 = Score2;
                            }
                        }
                    }
                });
                $("#a1, #a2").not('.collapsed').trigger('click');
                $("#a1, #a2").removeAttr('data-toggle').removeAttr('data-target').attr('href', "#").addClass("collapsed");
                $("#panelEncadrement, #panelAppel").hide(1000);
                $("#a3").attr('data-toggle', 'collapse').attr('data-target', '#epreuve').attr('href', "#epreuve").removeClass("collapsed");
                $("#a3").trigger('click');

            }).fail(function () {
                $("#notification").data('kendoNotification').show({
                    title: "Erreur de validation de l'appel"
                }, "error");
            });

        });
    });
</script>
